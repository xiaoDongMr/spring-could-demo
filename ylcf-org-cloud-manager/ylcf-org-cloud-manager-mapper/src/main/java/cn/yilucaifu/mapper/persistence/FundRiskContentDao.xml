<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.yilucaifu.mapper.persistence.FundRiskContentDao">
  <resultMap id="BaseResultMap" type="cn.yilucaifu.domain.FundRiskContent">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="test_class" jdbcType="INTEGER" property="testClass" />
    <result column="test_type" jdbcType="INTEGER" property="testType" />
    <result column="test_id" jdbcType="INTEGER" property="testId" />
    <result column="score" jdbcType="VARCHAR" property="score" />
    <result column="createtime" jdbcType="VARCHAR" property="createtime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.yilucaifu.domain.FundRiskContent">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, test_class, test_type, test_id, score, createtime
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.yilucaifu.domain.FundRiskContentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from fund_risk_content
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.yilucaifu.domain.FundRiskContentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fund_risk_content
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from fund_risk_content
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from fund_risk_content
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.yilucaifu.domain.FundRiskContentExample">
    delete from fund_risk_content
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.yilucaifu.domain.FundRiskContent">
    insert into fund_risk_content (id, test_class, test_type, 
      test_id, score, createtime, 
      content)
    values (#{id,jdbcType=INTEGER}, #{testClass,jdbcType=INTEGER}, #{testType,jdbcType=INTEGER}, 
      #{testId,jdbcType=INTEGER}, #{score,jdbcType=VARCHAR}, #{createtime,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.yilucaifu.domain.FundRiskContent">
    insert into fund_risk_content
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="testClass != null">
        test_class,
      </if>
      <if test="testType != null">
        test_type,
      </if>
      <if test="testId != null">
        test_id,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="testClass != null">
        #{testClass,jdbcType=INTEGER},
      </if>
      <if test="testType != null">
        #{testType,jdbcType=INTEGER},
      </if>
      <if test="testId != null">
        #{testId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.yilucaifu.domain.FundRiskContentExample" resultType="java.lang.Long">
    select count(*) from fund_risk_content
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update fund_risk_content
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.testClass != null">
        test_class = #{record.testClass,jdbcType=INTEGER},
      </if>
      <if test="record.testType != null">
        test_type = #{record.testType,jdbcType=INTEGER},
      </if>
      <if test="record.testId != null">
        test_id = #{record.testId,jdbcType=INTEGER},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update fund_risk_content
    set id = #{record.id,jdbcType=INTEGER},
      test_class = #{record.testClass,jdbcType=INTEGER},
      test_type = #{record.testType,jdbcType=INTEGER},
      test_id = #{record.testId,jdbcType=INTEGER},
      score = #{record.score,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update fund_risk_content
    set id = #{record.id,jdbcType=INTEGER},
      test_class = #{record.testClass,jdbcType=INTEGER},
      test_type = #{record.testType,jdbcType=INTEGER},
      test_id = #{record.testId,jdbcType=INTEGER},
      score = #{record.score,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.yilucaifu.domain.FundRiskContent">
    update fund_risk_content
    <set>
      <if test="testClass != null">
        test_class = #{testClass,jdbcType=INTEGER},
      </if>
      <if test="testType != null">
        test_type = #{testType,jdbcType=INTEGER},
      </if>
      <if test="testId != null">
        test_id = #{testId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.yilucaifu.domain.FundRiskContent">
    update fund_risk_content
    set test_class = #{testClass,jdbcType=INTEGER},
      test_type = #{testType,jdbcType=INTEGER},
      test_id = #{testId,jdbcType=INTEGER},
      score = #{score,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.yilucaifu.domain.FundRiskContent">
    update fund_risk_content
    set test_class = #{testClass,jdbcType=INTEGER},
      test_type = #{testType,jdbcType=INTEGER},
      test_id = #{testId,jdbcType=INTEGER},
      score = #{score,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>