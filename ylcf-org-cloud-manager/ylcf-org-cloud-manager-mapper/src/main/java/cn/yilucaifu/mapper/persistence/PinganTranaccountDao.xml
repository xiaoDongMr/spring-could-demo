<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.yilucaifu.mapper.persistence.PinganTranaccountDao">
  <resultMap id="BaseResultMap" type="cn.yilucaifu.domain.PinganTranaccount">
    <id column="account_id" jdbcType="INTEGER" property="accountId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="investorname" jdbcType="VARCHAR" property="investorname" />
    <result column="depositacct" jdbcType="VARCHAR" property="depositacct" />
    <result column="bankbook" jdbcType="VARCHAR" property="bankbook" />
    <result column="mobiletelno" jdbcType="VARCHAR" property="mobiletelno" />
    <result column="postcode" jdbcType="VARCHAR" property="postcode" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="bankno" jdbcType="VARCHAR" property="bankno" />
    <result column="netlineno" jdbcType="VARCHAR" property="netlineno" />
    <result column="taaccountid" jdbcType="VARCHAR" property="taaccountid" />
    <result column="ui" jdbcType="VARCHAR" property="ui" />
    <result column="xjbao_ui" jdbcType="VARCHAR" property="xjbaoUi" />
    <result column="identity" jdbcType="VARCHAR" property="identity" />
    <result column="ci" jdbcType="VARCHAR" property="ci" />
    <result column="risklevel" jdbcType="INTEGER" property="risklevel" />
    <result column="privateRisklevel" jdbcType="INTEGER" property="privaterisklevel" />
    <result column="isactive" jdbcType="INTEGER" property="isactive" />
    <result column="createtime" jdbcType="VARCHAR" property="createtime" />
    <result column="isVailcard" jdbcType="INTEGER" property="isvailcard" />
    <result column="valiCardDate" jdbcType="VARCHAR" property="valicarddate" />
    <result column="isSign" jdbcType="INTEGER" property="issign" />
    <result column="bankname" jdbcType="VARCHAR" property="bankname" />
    <result column="amount" jdbcType="VARCHAR" property="amount" />
    <result column="signtime" jdbcType="VARCHAR" property="signtime" />
    <result column="valiCount" jdbcType="INTEGER" property="valicount" />
    <result column="citycode" jdbcType="VARCHAR" property="citycode" />
    <result column="provincecode" jdbcType="VARCHAR" property="provincecode" />
    <result column="valiType" jdbcType="INTEGER" property="valitype" />
    <result column="lastRiskTime" jdbcType="TIMESTAMP" property="lastrisktime" />
    <result column="showvailtype" jdbcType="VARCHAR" property="showvailtype" />
    <result column="isUnion" jdbcType="INTEGER" property="isunion" />
    <result column="allot_no" jdbcType="VARCHAR" property="allotNo" />
    <result column="client_id" jdbcType="VARCHAR" property="clientId" />
    <result column="apply_date" jdbcType="VARCHAR" property="applyDate" />
    <result column="investor_type" jdbcType="INTEGER" property="investorType" />
    <result column="is_convertible" jdbcType="INTEGER" property="isConvertible" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="profession" jdbcType="VARCHAR" property="profession" />
    <result column="tax_resident_identity_type" jdbcType="VARCHAR" property="taxResidentIdentityType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    account_id, user_id, investorname, depositacct, bankbook, mobiletelno, postcode, 
    address, sex, bankno, netlineno, taaccountid, ui, xjbao_ui, identity, ci, risklevel, 
    privateRisklevel, isactive, createtime, isVailcard, valiCardDate, isSign, bankname, 
    amount, signtime, valiCount, citycode, provincecode, valiType, lastRiskTime, showvailtype, 
    isUnion, allot_no, client_id, apply_date, investor_type, is_convertible, email, profession, 
    tax_resident_identity_type
  </sql>
  <select id="selectByExample" parameterType="cn.yilucaifu.domain.PinganTranaccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pingan_tranaccount
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pingan_tranaccount
    where account_id = #{accountId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pingan_tranaccount
    where account_id = #{accountId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.yilucaifu.domain.PinganTranaccountExample">
    delete from pingan_tranaccount
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.yilucaifu.domain.PinganTranaccount">
    insert into pingan_tranaccount (account_id, user_id, investorname, 
      depositacct, bankbook, mobiletelno, 
      postcode, address, sex, 
      bankno, netlineno, taaccountid, 
      ui, xjbao_ui, identity, 
      ci, risklevel, privateRisklevel, 
      isactive, createtime, isVailcard, 
      valiCardDate, isSign, bankname, 
      amount, signtime, valiCount, 
      citycode, provincecode, valiType, 
      lastRiskTime, showvailtype, isUnion, 
      allot_no, client_id, apply_date, 
      investor_type, is_convertible, email, 
      profession, tax_resident_identity_type)
    values (#{accountId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{investorname,jdbcType=VARCHAR}, 
      #{depositacct,jdbcType=VARCHAR}, #{bankbook,jdbcType=VARCHAR}, #{mobiletelno,jdbcType=VARCHAR}, 
      #{postcode,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{bankno,jdbcType=VARCHAR}, #{netlineno,jdbcType=VARCHAR}, #{taaccountid,jdbcType=VARCHAR}, 
      #{ui,jdbcType=VARCHAR}, #{xjbaoUi,jdbcType=VARCHAR}, #{identity,jdbcType=VARCHAR}, 
      #{ci,jdbcType=VARCHAR}, #{risklevel,jdbcType=INTEGER}, #{privaterisklevel,jdbcType=INTEGER}, 
      #{isactive,jdbcType=INTEGER}, #{createtime,jdbcType=VARCHAR}, #{isvailcard,jdbcType=INTEGER}, 
      #{valicarddate,jdbcType=VARCHAR}, #{issign,jdbcType=INTEGER}, #{bankname,jdbcType=VARCHAR}, 
      #{amount,jdbcType=VARCHAR}, #{signtime,jdbcType=VARCHAR}, #{valicount,jdbcType=INTEGER}, 
      #{citycode,jdbcType=VARCHAR}, #{provincecode,jdbcType=VARCHAR}, #{valitype,jdbcType=INTEGER}, 
      #{lastrisktime,jdbcType=TIMESTAMP}, #{showvailtype,jdbcType=VARCHAR}, #{isunion,jdbcType=INTEGER}, 
      #{allotNo,jdbcType=VARCHAR}, #{clientId,jdbcType=VARCHAR}, #{applyDate,jdbcType=VARCHAR}, 
      #{investorType,jdbcType=INTEGER}, #{isConvertible,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, 
      #{profession,jdbcType=VARCHAR}, #{taxResidentIdentityType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.yilucaifu.domain.PinganTranaccount">
    insert into pingan_tranaccount
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        account_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="investorname != null">
        investorname,
      </if>
      <if test="depositacct != null">
        depositacct,
      </if>
      <if test="bankbook != null">
        bankbook,
      </if>
      <if test="mobiletelno != null">
        mobiletelno,
      </if>
      <if test="postcode != null">
        postcode,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="bankno != null">
        bankno,
      </if>
      <if test="netlineno != null">
        netlineno,
      </if>
      <if test="taaccountid != null">
        taaccountid,
      </if>
      <if test="ui != null">
        ui,
      </if>
      <if test="xjbaoUi != null">
        xjbao_ui,
      </if>
      <if test="identity != null">
        identity,
      </if>
      <if test="ci != null">
        ci,
      </if>
      <if test="risklevel != null">
        risklevel,
      </if>
      <if test="privaterisklevel != null">
        privateRisklevel,
      </if>
      <if test="isactive != null">
        isactive,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="isvailcard != null">
        isVailcard,
      </if>
      <if test="valicarddate != null">
        valiCardDate,
      </if>
      <if test="issign != null">
        isSign,
      </if>
      <if test="bankname != null">
        bankname,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="signtime != null">
        signtime,
      </if>
      <if test="valicount != null">
        valiCount,
      </if>
      <if test="citycode != null">
        citycode,
      </if>
      <if test="provincecode != null">
        provincecode,
      </if>
      <if test="valitype != null">
        valiType,
      </if>
      <if test="lastrisktime != null">
        lastRiskTime,
      </if>
      <if test="showvailtype != null">
        showvailtype,
      </if>
      <if test="isunion != null">
        isUnion,
      </if>
      <if test="allotNo != null">
        allot_no,
      </if>
      <if test="clientId != null">
        client_id,
      </if>
      <if test="applyDate != null">
        apply_date,
      </if>
      <if test="investorType != null">
        investor_type,
      </if>
      <if test="isConvertible != null">
        is_convertible,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="profession != null">
        profession,
      </if>
      <if test="taxResidentIdentityType != null">
        tax_resident_identity_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="investorname != null">
        #{investorname,jdbcType=VARCHAR},
      </if>
      <if test="depositacct != null">
        #{depositacct,jdbcType=VARCHAR},
      </if>
      <if test="bankbook != null">
        #{bankbook,jdbcType=VARCHAR},
      </if>
      <if test="mobiletelno != null">
        #{mobiletelno,jdbcType=VARCHAR},
      </if>
      <if test="postcode != null">
        #{postcode,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="bankno != null">
        #{bankno,jdbcType=VARCHAR},
      </if>
      <if test="netlineno != null">
        #{netlineno,jdbcType=VARCHAR},
      </if>
      <if test="taaccountid != null">
        #{taaccountid,jdbcType=VARCHAR},
      </if>
      <if test="ui != null">
        #{ui,jdbcType=VARCHAR},
      </if>
      <if test="xjbaoUi != null">
        #{xjbaoUi,jdbcType=VARCHAR},
      </if>
      <if test="identity != null">
        #{identity,jdbcType=VARCHAR},
      </if>
      <if test="ci != null">
        #{ci,jdbcType=VARCHAR},
      </if>
      <if test="risklevel != null">
        #{risklevel,jdbcType=INTEGER},
      </if>
      <if test="privaterisklevel != null">
        #{privaterisklevel,jdbcType=INTEGER},
      </if>
      <if test="isactive != null">
        #{isactive,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="isvailcard != null">
        #{isvailcard,jdbcType=INTEGER},
      </if>
      <if test="valicarddate != null">
        #{valicarddate,jdbcType=VARCHAR},
      </if>
      <if test="issign != null">
        #{issign,jdbcType=INTEGER},
      </if>
      <if test="bankname != null">
        #{bankname,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=VARCHAR},
      </if>
      <if test="signtime != null">
        #{signtime,jdbcType=VARCHAR},
      </if>
      <if test="valicount != null">
        #{valicount,jdbcType=INTEGER},
      </if>
      <if test="citycode != null">
        #{citycode,jdbcType=VARCHAR},
      </if>
      <if test="provincecode != null">
        #{provincecode,jdbcType=VARCHAR},
      </if>
      <if test="valitype != null">
        #{valitype,jdbcType=INTEGER},
      </if>
      <if test="lastrisktime != null">
        #{lastrisktime,jdbcType=TIMESTAMP},
      </if>
      <if test="showvailtype != null">
        #{showvailtype,jdbcType=VARCHAR},
      </if>
      <if test="isunion != null">
        #{isunion,jdbcType=INTEGER},
      </if>
      <if test="allotNo != null">
        #{allotNo,jdbcType=VARCHAR},
      </if>
      <if test="clientId != null">
        #{clientId,jdbcType=VARCHAR},
      </if>
      <if test="applyDate != null">
        #{applyDate,jdbcType=VARCHAR},
      </if>
      <if test="investorType != null">
        #{investorType,jdbcType=INTEGER},
      </if>
      <if test="isConvertible != null">
        #{isConvertible,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="profession != null">
        #{profession,jdbcType=VARCHAR},
      </if>
      <if test="taxResidentIdentityType != null">
        #{taxResidentIdentityType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.yilucaifu.domain.PinganTranaccountExample" resultType="java.lang.Long">
    select count(*) from pingan_tranaccount
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pingan_tranaccount
    <set>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.investorname != null">
        investorname = #{record.investorname,jdbcType=VARCHAR},
      </if>
      <if test="record.depositacct != null">
        depositacct = #{record.depositacct,jdbcType=VARCHAR},
      </if>
      <if test="record.bankbook != null">
        bankbook = #{record.bankbook,jdbcType=VARCHAR},
      </if>
      <if test="record.mobiletelno != null">
        mobiletelno = #{record.mobiletelno,jdbcType=VARCHAR},
      </if>
      <if test="record.postcode != null">
        postcode = #{record.postcode,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.bankno != null">
        bankno = #{record.bankno,jdbcType=VARCHAR},
      </if>
      <if test="record.netlineno != null">
        netlineno = #{record.netlineno,jdbcType=VARCHAR},
      </if>
      <if test="record.taaccountid != null">
        taaccountid = #{record.taaccountid,jdbcType=VARCHAR},
      </if>
      <if test="record.ui != null">
        ui = #{record.ui,jdbcType=VARCHAR},
      </if>
      <if test="record.xjbaoUi != null">
        xjbao_ui = #{record.xjbaoUi,jdbcType=VARCHAR},
      </if>
      <if test="record.identity != null">
        identity = #{record.identity,jdbcType=VARCHAR},
      </if>
      <if test="record.ci != null">
        ci = #{record.ci,jdbcType=VARCHAR},
      </if>
      <if test="record.risklevel != null">
        risklevel = #{record.risklevel,jdbcType=INTEGER},
      </if>
      <if test="record.privaterisklevel != null">
        privateRisklevel = #{record.privaterisklevel,jdbcType=INTEGER},
      </if>
      <if test="record.isactive != null">
        isactive = #{record.isactive,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=VARCHAR},
      </if>
      <if test="record.isvailcard != null">
        isVailcard = #{record.isvailcard,jdbcType=INTEGER},
      </if>
      <if test="record.valicarddate != null">
        valiCardDate = #{record.valicarddate,jdbcType=VARCHAR},
      </if>
      <if test="record.issign != null">
        isSign = #{record.issign,jdbcType=INTEGER},
      </if>
      <if test="record.bankname != null">
        bankname = #{record.bankname,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=VARCHAR},
      </if>
      <if test="record.signtime != null">
        signtime = #{record.signtime,jdbcType=VARCHAR},
      </if>
      <if test="record.valicount != null">
        valiCount = #{record.valicount,jdbcType=INTEGER},
      </if>
      <if test="record.citycode != null">
        citycode = #{record.citycode,jdbcType=VARCHAR},
      </if>
      <if test="record.provincecode != null">
        provincecode = #{record.provincecode,jdbcType=VARCHAR},
      </if>
      <if test="record.valitype != null">
        valiType = #{record.valitype,jdbcType=INTEGER},
      </if>
      <if test="record.lastrisktime != null">
        lastRiskTime = #{record.lastrisktime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.showvailtype != null">
        showvailtype = #{record.showvailtype,jdbcType=VARCHAR},
      </if>
      <if test="record.isunion != null">
        isUnion = #{record.isunion,jdbcType=INTEGER},
      </if>
      <if test="record.allotNo != null">
        allot_no = #{record.allotNo,jdbcType=VARCHAR},
      </if>
      <if test="record.clientId != null">
        client_id = #{record.clientId,jdbcType=VARCHAR},
      </if>
      <if test="record.applyDate != null">
        apply_date = #{record.applyDate,jdbcType=VARCHAR},
      </if>
      <if test="record.investorType != null">
        investor_type = #{record.investorType,jdbcType=INTEGER},
      </if>
      <if test="record.isConvertible != null">
        is_convertible = #{record.isConvertible,jdbcType=INTEGER},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.profession != null">
        profession = #{record.profession,jdbcType=VARCHAR},
      </if>
      <if test="record.taxResidentIdentityType != null">
        tax_resident_identity_type = #{record.taxResidentIdentityType,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pingan_tranaccount
    set account_id = #{record.accountId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      investorname = #{record.investorname,jdbcType=VARCHAR},
      depositacct = #{record.depositacct,jdbcType=VARCHAR},
      bankbook = #{record.bankbook,jdbcType=VARCHAR},
      mobiletelno = #{record.mobiletelno,jdbcType=VARCHAR},
      postcode = #{record.postcode,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      bankno = #{record.bankno,jdbcType=VARCHAR},
      netlineno = #{record.netlineno,jdbcType=VARCHAR},
      taaccountid = #{record.taaccountid,jdbcType=VARCHAR},
      ui = #{record.ui,jdbcType=VARCHAR},
      xjbao_ui = #{record.xjbaoUi,jdbcType=VARCHAR},
      identity = #{record.identity,jdbcType=VARCHAR},
      ci = #{record.ci,jdbcType=VARCHAR},
      risklevel = #{record.risklevel,jdbcType=INTEGER},
      privateRisklevel = #{record.privaterisklevel,jdbcType=INTEGER},
      isactive = #{record.isactive,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=VARCHAR},
      isVailcard = #{record.isvailcard,jdbcType=INTEGER},
      valiCardDate = #{record.valicarddate,jdbcType=VARCHAR},
      isSign = #{record.issign,jdbcType=INTEGER},
      bankname = #{record.bankname,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=VARCHAR},
      signtime = #{record.signtime,jdbcType=VARCHAR},
      valiCount = #{record.valicount,jdbcType=INTEGER},
      citycode = #{record.citycode,jdbcType=VARCHAR},
      provincecode = #{record.provincecode,jdbcType=VARCHAR},
      valiType = #{record.valitype,jdbcType=INTEGER},
      lastRiskTime = #{record.lastrisktime,jdbcType=TIMESTAMP},
      showvailtype = #{record.showvailtype,jdbcType=VARCHAR},
      isUnion = #{record.isunion,jdbcType=INTEGER},
      allot_no = #{record.allotNo,jdbcType=VARCHAR},
      client_id = #{record.clientId,jdbcType=VARCHAR},
      apply_date = #{record.applyDate,jdbcType=VARCHAR},
      investor_type = #{record.investorType,jdbcType=INTEGER},
      is_convertible = #{record.isConvertible,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      profession = #{record.profession,jdbcType=VARCHAR},
      tax_resident_identity_type = #{record.taxResidentIdentityType,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.yilucaifu.domain.PinganTranaccount">
    update pingan_tranaccount
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="investorname != null">
        investorname = #{investorname,jdbcType=VARCHAR},
      </if>
      <if test="depositacct != null">
        depositacct = #{depositacct,jdbcType=VARCHAR},
      </if>
      <if test="bankbook != null">
        bankbook = #{bankbook,jdbcType=VARCHAR},
      </if>
      <if test="mobiletelno != null">
        mobiletelno = #{mobiletelno,jdbcType=VARCHAR},
      </if>
      <if test="postcode != null">
        postcode = #{postcode,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="bankno != null">
        bankno = #{bankno,jdbcType=VARCHAR},
      </if>
      <if test="netlineno != null">
        netlineno = #{netlineno,jdbcType=VARCHAR},
      </if>
      <if test="taaccountid != null">
        taaccountid = #{taaccountid,jdbcType=VARCHAR},
      </if>
      <if test="ui != null">
        ui = #{ui,jdbcType=VARCHAR},
      </if>
      <if test="xjbaoUi != null">
        xjbao_ui = #{xjbaoUi,jdbcType=VARCHAR},
      </if>
      <if test="identity != null">
        identity = #{identity,jdbcType=VARCHAR},
      </if>
      <if test="ci != null">
        ci = #{ci,jdbcType=VARCHAR},
      </if>
      <if test="risklevel != null">
        risklevel = #{risklevel,jdbcType=INTEGER},
      </if>
      <if test="privaterisklevel != null">
        privateRisklevel = #{privaterisklevel,jdbcType=INTEGER},
      </if>
      <if test="isactive != null">
        isactive = #{isactive,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="isvailcard != null">
        isVailcard = #{isvailcard,jdbcType=INTEGER},
      </if>
      <if test="valicarddate != null">
        valiCardDate = #{valicarddate,jdbcType=VARCHAR},
      </if>
      <if test="issign != null">
        isSign = #{issign,jdbcType=INTEGER},
      </if>
      <if test="bankname != null">
        bankname = #{bankname,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=VARCHAR},
      </if>
      <if test="signtime != null">
        signtime = #{signtime,jdbcType=VARCHAR},
      </if>
      <if test="valicount != null">
        valiCount = #{valicount,jdbcType=INTEGER},
      </if>
      <if test="citycode != null">
        citycode = #{citycode,jdbcType=VARCHAR},
      </if>
      <if test="provincecode != null">
        provincecode = #{provincecode,jdbcType=VARCHAR},
      </if>
      <if test="valitype != null">
        valiType = #{valitype,jdbcType=INTEGER},
      </if>
      <if test="lastrisktime != null">
        lastRiskTime = #{lastrisktime,jdbcType=TIMESTAMP},
      </if>
      <if test="showvailtype != null">
        showvailtype = #{showvailtype,jdbcType=VARCHAR},
      </if>
      <if test="isunion != null">
        isUnion = #{isunion,jdbcType=INTEGER},
      </if>
      <if test="allotNo != null">
        allot_no = #{allotNo,jdbcType=VARCHAR},
      </if>
      <if test="clientId != null">
        client_id = #{clientId,jdbcType=VARCHAR},
      </if>
      <if test="applyDate != null">
        apply_date = #{applyDate,jdbcType=VARCHAR},
      </if>
      <if test="investorType != null">
        investor_type = #{investorType,jdbcType=INTEGER},
      </if>
      <if test="isConvertible != null">
        is_convertible = #{isConvertible,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="profession != null">
        profession = #{profession,jdbcType=VARCHAR},
      </if>
      <if test="taxResidentIdentityType != null">
        tax_resident_identity_type = #{taxResidentIdentityType,jdbcType=VARCHAR},
      </if>
    </set>
    where account_id = #{accountId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.yilucaifu.domain.PinganTranaccount">
    update pingan_tranaccount
    set user_id = #{userId,jdbcType=INTEGER},
      investorname = #{investorname,jdbcType=VARCHAR},
      depositacct = #{depositacct,jdbcType=VARCHAR},
      bankbook = #{bankbook,jdbcType=VARCHAR},
      mobiletelno = #{mobiletelno,jdbcType=VARCHAR},
      postcode = #{postcode,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      bankno = #{bankno,jdbcType=VARCHAR},
      netlineno = #{netlineno,jdbcType=VARCHAR},
      taaccountid = #{taaccountid,jdbcType=VARCHAR},
      ui = #{ui,jdbcType=VARCHAR},
      xjbao_ui = #{xjbaoUi,jdbcType=VARCHAR},
      identity = #{identity,jdbcType=VARCHAR},
      ci = #{ci,jdbcType=VARCHAR},
      risklevel = #{risklevel,jdbcType=INTEGER},
      privateRisklevel = #{privaterisklevel,jdbcType=INTEGER},
      isactive = #{isactive,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=VARCHAR},
      isVailcard = #{isvailcard,jdbcType=INTEGER},
      valiCardDate = #{valicarddate,jdbcType=VARCHAR},
      isSign = #{issign,jdbcType=INTEGER},
      bankname = #{bankname,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=VARCHAR},
      signtime = #{signtime,jdbcType=VARCHAR},
      valiCount = #{valicount,jdbcType=INTEGER},
      citycode = #{citycode,jdbcType=VARCHAR},
      provincecode = #{provincecode,jdbcType=VARCHAR},
      valiType = #{valitype,jdbcType=INTEGER},
      lastRiskTime = #{lastrisktime,jdbcType=TIMESTAMP},
      showvailtype = #{showvailtype,jdbcType=VARCHAR},
      isUnion = #{isunion,jdbcType=INTEGER},
      allot_no = #{allotNo,jdbcType=VARCHAR},
      client_id = #{clientId,jdbcType=VARCHAR},
      apply_date = #{applyDate,jdbcType=VARCHAR},
      investor_type = #{investorType,jdbcType=INTEGER},
      is_convertible = #{isConvertible,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      profession = #{profession,jdbcType=VARCHAR},
      tax_resident_identity_type = #{taxResidentIdentityType,jdbcType=VARCHAR}
    where account_id = #{accountId,jdbcType=INTEGER}
  </update>
</mapper>