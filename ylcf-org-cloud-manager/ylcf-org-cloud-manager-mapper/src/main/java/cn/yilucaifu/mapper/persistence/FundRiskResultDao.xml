<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.yilucaifu.mapper.persistence.FundRiskResultDao">
  <resultMap id="BaseResultMap" type="cn.yilucaifu.domain.FundRiskResult">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="test_class" jdbcType="INTEGER" property="testClass" />
    <result column="risk_content" jdbcType="VARCHAR" property="riskContent" />
    <result column="risk_level" jdbcType="INTEGER" property="riskLevel" />
    <result column="companyinfo_score" jdbcType="DOUBLE" property="companyinfoScore" />
    <result column="financial_score" jdbcType="DOUBLE" property="financialScore" />
    <result column="knowledge_score" jdbcType="DOUBLE" property="knowledgeScore" />
    <result column="invest_target_score" jdbcType="DOUBLE" property="investTargetScore" />
    <result column="rist_preference_score" jdbcType="DOUBLE" property="ristPreferenceScore" />
    <result column="total_score" jdbcType="DOUBLE" property="totalScore" />
    <result column="createtime" jdbcType="VARCHAR" property="createtime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, test_class, risk_content, risk_level, companyinfo_score, financial_score, 
    knowledge_score, invest_target_score, rist_preference_score, total_score, createtime
  </sql>
  <select id="selectByExample" parameterType="cn.yilucaifu.domain.FundRiskResultExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fund_risk_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from fund_risk_result
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from fund_risk_result
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.yilucaifu.domain.FundRiskResultExample">
    delete from fund_risk_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.yilucaifu.domain.FundRiskResult">
    insert into fund_risk_result (id, user_id, test_class, 
      risk_content, risk_level, companyinfo_score, 
      financial_score, knowledge_score, invest_target_score, 
      rist_preference_score, total_score, createtime
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{testClass,jdbcType=INTEGER}, 
      #{riskContent,jdbcType=VARCHAR}, #{riskLevel,jdbcType=INTEGER}, #{companyinfoScore,jdbcType=DOUBLE}, 
      #{financialScore,jdbcType=DOUBLE}, #{knowledgeScore,jdbcType=DOUBLE}, #{investTargetScore,jdbcType=DOUBLE}, 
      #{ristPreferenceScore,jdbcType=DOUBLE}, #{totalScore,jdbcType=DOUBLE}, #{createtime,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.yilucaifu.domain.FundRiskResult">
    insert into fund_risk_result
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="testClass != null">
        test_class,
      </if>
      <if test="riskContent != null">
        risk_content,
      </if>
      <if test="riskLevel != null">
        risk_level,
      </if>
      <if test="companyinfoScore != null">
        companyinfo_score,
      </if>
      <if test="financialScore != null">
        financial_score,
      </if>
      <if test="knowledgeScore != null">
        knowledge_score,
      </if>
      <if test="investTargetScore != null">
        invest_target_score,
      </if>
      <if test="ristPreferenceScore != null">
        rist_preference_score,
      </if>
      <if test="totalScore != null">
        total_score,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="testClass != null">
        #{testClass,jdbcType=INTEGER},
      </if>
      <if test="riskContent != null">
        #{riskContent,jdbcType=VARCHAR},
      </if>
      <if test="riskLevel != null">
        #{riskLevel,jdbcType=INTEGER},
      </if>
      <if test="companyinfoScore != null">
        #{companyinfoScore,jdbcType=DOUBLE},
      </if>
      <if test="financialScore != null">
        #{financialScore,jdbcType=DOUBLE},
      </if>
      <if test="knowledgeScore != null">
        #{knowledgeScore,jdbcType=DOUBLE},
      </if>
      <if test="investTargetScore != null">
        #{investTargetScore,jdbcType=DOUBLE},
      </if>
      <if test="ristPreferenceScore != null">
        #{ristPreferenceScore,jdbcType=DOUBLE},
      </if>
      <if test="totalScore != null">
        #{totalScore,jdbcType=DOUBLE},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.yilucaifu.domain.FundRiskResultExample" resultType="java.lang.Long">
    select count(*) from fund_risk_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update fund_risk_result
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.testClass != null">
        test_class = #{record.testClass,jdbcType=INTEGER},
      </if>
      <if test="record.riskContent != null">
        risk_content = #{record.riskContent,jdbcType=VARCHAR},
      </if>
      <if test="record.riskLevel != null">
        risk_level = #{record.riskLevel,jdbcType=INTEGER},
      </if>
      <if test="record.companyinfoScore != null">
        companyinfo_score = #{record.companyinfoScore,jdbcType=DOUBLE},
      </if>
      <if test="record.financialScore != null">
        financial_score = #{record.financialScore,jdbcType=DOUBLE},
      </if>
      <if test="record.knowledgeScore != null">
        knowledge_score = #{record.knowledgeScore,jdbcType=DOUBLE},
      </if>
      <if test="record.investTargetScore != null">
        invest_target_score = #{record.investTargetScore,jdbcType=DOUBLE},
      </if>
      <if test="record.ristPreferenceScore != null">
        rist_preference_score = #{record.ristPreferenceScore,jdbcType=DOUBLE},
      </if>
      <if test="record.totalScore != null">
        total_score = #{record.totalScore,jdbcType=DOUBLE},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update fund_risk_result
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      test_class = #{record.testClass,jdbcType=INTEGER},
      risk_content = #{record.riskContent,jdbcType=VARCHAR},
      risk_level = #{record.riskLevel,jdbcType=INTEGER},
      companyinfo_score = #{record.companyinfoScore,jdbcType=DOUBLE},
      financial_score = #{record.financialScore,jdbcType=DOUBLE},
      knowledge_score = #{record.knowledgeScore,jdbcType=DOUBLE},
      invest_target_score = #{record.investTargetScore,jdbcType=DOUBLE},
      rist_preference_score = #{record.ristPreferenceScore,jdbcType=DOUBLE},
      total_score = #{record.totalScore,jdbcType=DOUBLE},
      createtime = #{record.createtime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.yilucaifu.domain.FundRiskResult">
    update fund_risk_result
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="testClass != null">
        test_class = #{testClass,jdbcType=INTEGER},
      </if>
      <if test="riskContent != null">
        risk_content = #{riskContent,jdbcType=VARCHAR},
      </if>
      <if test="riskLevel != null">
        risk_level = #{riskLevel,jdbcType=INTEGER},
      </if>
      <if test="companyinfoScore != null">
        companyinfo_score = #{companyinfoScore,jdbcType=DOUBLE},
      </if>
      <if test="financialScore != null">
        financial_score = #{financialScore,jdbcType=DOUBLE},
      </if>
      <if test="knowledgeScore != null">
        knowledge_score = #{knowledgeScore,jdbcType=DOUBLE},
      </if>
      <if test="investTargetScore != null">
        invest_target_score = #{investTargetScore,jdbcType=DOUBLE},
      </if>
      <if test="ristPreferenceScore != null">
        rist_preference_score = #{ristPreferenceScore,jdbcType=DOUBLE},
      </if>
      <if test="totalScore != null">
        total_score = #{totalScore,jdbcType=DOUBLE},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.yilucaifu.domain.FundRiskResult">
    update fund_risk_result
    set user_id = #{userId,jdbcType=INTEGER},
      test_class = #{testClass,jdbcType=INTEGER},
      risk_content = #{riskContent,jdbcType=VARCHAR},
      risk_level = #{riskLevel,jdbcType=INTEGER},
      companyinfo_score = #{companyinfoScore,jdbcType=DOUBLE},
      financial_score = #{financialScore,jdbcType=DOUBLE},
      knowledge_score = #{knowledgeScore,jdbcType=DOUBLE},
      invest_target_score = #{investTargetScore,jdbcType=DOUBLE},
      rist_preference_score = #{ristPreferenceScore,jdbcType=DOUBLE},
      total_score = #{totalScore,jdbcType=DOUBLE},
      createtime = #{createtime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>