<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.yilucaifu.mapper.persistence.UserInfoDao">
    <resultMap id="BaseResultMap" type="cn.yilucaifu.domain.UserInfo">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="user_id" jdbcType="INTEGER" property="userId" />
        <result column="business_license_front" jdbcType="VARCHAR" property="businessLicenseFront" />
        <result column="business_license_verso" jdbcType="VARCHAR" property="businessLicenseVerso" />
        <result column="company_account_card" jdbcType="VARCHAR" property="companyAccountCard" />
        <result column="identity_card" jdbcType="VARCHAR" property="identityCard" />
        <result column="company_entrust_book" jdbcType="VARCHAR" property="companyEntrustBook" />
        <result column="man_identity" jdbcType="VARCHAR" property="manIdentity" />
        <result column="else_account_card" jdbcType="VARCHAR" property="elseAccountCard" />
        <result column="qfii_card" jdbcType="VARCHAR" property="qfiiCard" />
        <result column="egalPerson" jdbcType="VARCHAR" property="egalperson" />
        <result column="egalPersonCertNo" jdbcType="VARCHAR" property="egalpersoncertno" />
        <result column="socialCreditCode" jdbcType="VARCHAR" property="socialcreditcode" />
        <result column="expiresEnd" jdbcType="VARCHAR" property="expiresend" />
        <result column="certOrganization" jdbcType="VARCHAR" property="certorganization" />
        <result column="contactorAddress" jdbcType="VARCHAR" property="contactoraddress" />
        <result column="taxRegisterNo" jdbcType="VARCHAR" property="taxregisterno" />
        <result column="businessLicenseNo" jdbcType="VARCHAR" property="businesslicenseno" />
        <result column="auditStatus" jdbcType="INTEGER" property="auditstatus" />
        <result column="auditQfii" jdbcType="INTEGER" property="auditqfii" />
        <result column="audittime" jdbcType="VARCHAR" property="audittime" />
        <result column="auditqfiitime" jdbcType="VARCHAR" property="auditqfiitime" />
        <result column="auditStatusFailReason" jdbcType="VARCHAR" property="auditstatusfailreason" />
        <result column="auditQfiiFailReason" jdbcType="VARCHAR" property="auditqfiifailreason" />
        <result column="merchant_register" jdbcType="TINYINT" property="merchantRegister" />
        <result column="merchant_register_time" jdbcType="TIMESTAMP" property="merchantRegisterTime" />
        <result column="merchant_auth" jdbcType="TINYINT" property="merchantAuth" />
        <result column="merchant_auth_time" jdbcType="TIMESTAMP" property="merchantAuthTime" />
        <result column="merchant_opening" jdbcType="TINYINT" property="merchantOpening" />
        <result column="merchant_opening_time" jdbcType="TIMESTAMP" property="merchantOpeningTime" />
        <result column="fund_opening" jdbcType="TINYINT" property="fundOpening" />
        <result column="fund_opening_time" jdbcType="TIMESTAMP" property="fundOpeningTime" />
        <result column="merchant_fail_reason" jdbcType="VARCHAR" property="merchantFailReason" />
        <result column="createtime" jdbcType="VARCHAR" property="createtime" />
        <result column="hs_api_data" jdbcType="VARCHAR" property="hsApiData" />
        <result column="fund_api_data" jdbcType="VARCHAR" property="fundApiData" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, user_id, business_license_front, business_license_verso, company_account_card,
        identity_card, company_entrust_book, man_identity, else_account_card, qfii_card,
        egalPerson, egalPersonCertNo, socialCreditCode, expiresEnd, certOrganization, contactorAddress,
        taxRegisterNo, businessLicenseNo, auditStatus, auditQfii, audittime, auditqfiitime,
        auditStatusFailReason, auditQfiiFailReason, merchant_register, merchant_register_time,
        merchant_auth, merchant_auth_time, merchant_opening, merchant_opening_time, fund_opening,
        fund_opening_time, merchant_fail_reason, createtime, hs_api_data, fund_api_data
    </sql>
    <select id="selectByExample" parameterType="cn.yilucaifu.domain.UserInfoExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from user_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user_info
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from user_info
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="cn.yilucaifu.domain.UserInfoExample">
        delete from user_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="cn.yilucaifu.domain.UserInfo">
        insert into user_info (id, user_id, business_license_front,
        business_license_verso, company_account_card,
        identity_card, company_entrust_book, man_identity,
        else_account_card, qfii_card, egalPerson,
        egalPersonCertNo, socialCreditCode, expiresEnd,
        certOrganization, contactorAddress, taxRegisterNo,
        businessLicenseNo, auditStatus, auditQfii,
        audittime, auditqfiitime, auditStatusFailReason,
        auditQfiiFailReason, merchant_register,
        merchant_register_time, merchant_auth, merchant_auth_time,
        merchant_opening, merchant_opening_time,
        fund_opening, fund_opening_time, merchant_fail_reason,
        createtime, hs_api_data, fund_api_data
        )
        values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{businessLicenseFront,jdbcType=VARCHAR},
        #{businessLicenseVerso,jdbcType=VARCHAR}, #{companyAccountCard,jdbcType=VARCHAR},
        #{identityCard,jdbcType=VARCHAR}, #{companyEntrustBook,jdbcType=VARCHAR}, #{manIdentity,jdbcType=VARCHAR},
        #{elseAccountCard,jdbcType=VARCHAR}, #{qfiiCard,jdbcType=VARCHAR}, #{egalperson,jdbcType=VARCHAR},
        #{egalpersoncertno,jdbcType=VARCHAR}, #{socialcreditcode,jdbcType=VARCHAR}, #{expiresend,jdbcType=VARCHAR},
        #{certorganization,jdbcType=VARCHAR}, #{contactoraddress,jdbcType=VARCHAR}, #{taxregisterno,jdbcType=VARCHAR},
        #{businesslicenseno,jdbcType=VARCHAR}, #{auditstatus,jdbcType=INTEGER}, #{auditqfii,jdbcType=INTEGER},
        #{audittime,jdbcType=VARCHAR}, #{auditqfiitime,jdbcType=VARCHAR}, #{auditstatusfailreason,jdbcType=VARCHAR},
        #{auditqfiifailreason,jdbcType=VARCHAR}, #{merchantRegister,jdbcType=TINYINT},
        #{merchantRegisterTime,jdbcType=TIMESTAMP}, #{merchantAuth,jdbcType=TINYINT}, #{merchantAuthTime,jdbcType=TIMESTAMP},
        #{merchantOpening,jdbcType=TINYINT}, #{merchantOpeningTime,jdbcType=TIMESTAMP},
        #{fundOpening,jdbcType=TINYINT}, #{fundOpeningTime,jdbcType=TIMESTAMP}, #{merchantFailReason,jdbcType=VARCHAR},
        #{createtime,jdbcType=VARCHAR}, #{hsApiData,jdbcType=VARCHAR}, #{fundApiData,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="cn.yilucaifu.domain.UserInfo">
        insert into user_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="businessLicenseFront != null">
                business_license_front,
            </if>
            <if test="businessLicenseVerso != null">
                business_license_verso,
            </if>
            <if test="companyAccountCard != null">
                company_account_card,
            </if>
            <if test="identityCard != null">
                identity_card,
            </if>
            <if test="companyEntrustBook != null">
                company_entrust_book,
            </if>
            <if test="manIdentity != null">
                man_identity,
            </if>
            <if test="elseAccountCard != null">
                else_account_card,
            </if>
            <if test="qfiiCard != null">
                qfii_card,
            </if>
            <if test="egalperson != null">
                egalPerson,
            </if>
            <if test="egalpersoncertno != null">
                egalPersonCertNo,
            </if>
            <if test="socialcreditcode != null">
                socialCreditCode,
            </if>
            <if test="expiresend != null">
                expiresEnd,
            </if>
            <if test="certorganization != null">
                certOrganization,
            </if>
            <if test="contactoraddress != null">
                contactorAddress,
            </if>
            <if test="taxregisterno != null">
                taxRegisterNo,
            </if>
            <if test="businesslicenseno != null">
                businessLicenseNo,
            </if>
            <if test="auditstatus != null">
                auditStatus,
            </if>
            <if test="auditqfii != null">
                auditQfii,
            </if>
            <if test="audittime != null">
                audittime,
            </if>
            <if test="auditqfiitime != null">
                auditqfiitime,
            </if>
            <if test="auditstatusfailreason != null">
                auditStatusFailReason,
            </if>
            <if test="auditqfiifailreason != null">
                auditQfiiFailReason,
            </if>
            <if test="merchantRegister != null">
                merchant_register,
            </if>
            <if test="merchantRegisterTime != null">
                merchant_register_time,
            </if>
            <if test="merchantAuth != null">
                merchant_auth,
            </if>
            <if test="merchantAuthTime != null">
                merchant_auth_time,
            </if>
            <if test="merchantOpening != null">
                merchant_opening,
            </if>
            <if test="merchantOpeningTime != null">
                merchant_opening_time,
            </if>
            <if test="fundOpening != null">
                fund_opening,
            </if>
            <if test="fundOpeningTime != null">
                fund_opening_time,
            </if>
            <if test="merchantFailReason != null">
                merchant_fail_reason,
            </if>
            <if test="createtime != null">
                createtime,
            </if>
            <if test="hsApiData != null">
                hs_api_data,
            </if>
            <if test="fundApiData != null">
                fund_api_data,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="businessLicenseFront != null">
                #{businessLicenseFront,jdbcType=VARCHAR},
            </if>
            <if test="businessLicenseVerso != null">
                #{businessLicenseVerso,jdbcType=VARCHAR},
            </if>
            <if test="companyAccountCard != null">
                #{companyAccountCard,jdbcType=VARCHAR},
            </if>
            <if test="identityCard != null">
                #{identityCard,jdbcType=VARCHAR},
            </if>
            <if test="companyEntrustBook != null">
                #{companyEntrustBook,jdbcType=VARCHAR},
            </if>
            <if test="manIdentity != null">
                #{manIdentity,jdbcType=VARCHAR},
            </if>
            <if test="elseAccountCard != null">
                #{elseAccountCard,jdbcType=VARCHAR},
            </if>
            <if test="qfiiCard != null">
                #{qfiiCard,jdbcType=VARCHAR},
            </if>
            <if test="egalperson != null">
                #{egalperson,jdbcType=VARCHAR},
            </if>
            <if test="egalpersoncertno != null">
                #{egalpersoncertno,jdbcType=VARCHAR},
            </if>
            <if test="socialcreditcode != null">
                #{socialcreditcode,jdbcType=VARCHAR},
            </if>
            <if test="expiresend != null">
                #{expiresend,jdbcType=VARCHAR},
            </if>
            <if test="certorganization != null">
                #{certorganization,jdbcType=VARCHAR},
            </if>
            <if test="contactoraddress != null">
                #{contactoraddress,jdbcType=VARCHAR},
            </if>
            <if test="taxregisterno != null">
                #{taxregisterno,jdbcType=VARCHAR},
            </if>
            <if test="businesslicenseno != null">
                #{businesslicenseno,jdbcType=VARCHAR},
            </if>
            <if test="auditstatus != null">
                #{auditstatus,jdbcType=INTEGER},
            </if>
            <if test="auditqfii != null">
                #{auditqfii,jdbcType=INTEGER},
            </if>
            <if test="audittime != null">
                #{audittime,jdbcType=VARCHAR},
            </if>
            <if test="auditqfiitime != null">
                #{auditqfiitime,jdbcType=VARCHAR},
            </if>
            <if test="auditstatusfailreason != null">
                #{auditstatusfailreason,jdbcType=VARCHAR},
            </if>
            <if test="auditqfiifailreason != null">
                #{auditqfiifailreason,jdbcType=VARCHAR},
            </if>
            <if test="merchantRegister != null">
                #{merchantRegister,jdbcType=TINYINT},
            </if>
            <if test="merchantRegisterTime != null">
                #{merchantRegisterTime,jdbcType=TIMESTAMP},
            </if>
            <if test="merchantAuth != null">
                #{merchantAuth,jdbcType=TINYINT},
            </if>
            <if test="merchantAuthTime != null">
                #{merchantAuthTime,jdbcType=TIMESTAMP},
            </if>
            <if test="merchantOpening != null">
                #{merchantOpening,jdbcType=TINYINT},
            </if>
            <if test="merchantOpeningTime != null">
                #{merchantOpeningTime,jdbcType=TIMESTAMP},
            </if>
            <if test="fundOpening != null">
                #{fundOpening,jdbcType=TINYINT},
            </if>
            <if test="fundOpeningTime != null">
                #{fundOpeningTime,jdbcType=TIMESTAMP},
            </if>
            <if test="merchantFailReason != null">
                #{merchantFailReason,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null">
                #{createtime,jdbcType=VARCHAR},
            </if>
            <if test="hsApiData != null">
                #{hsApiData,jdbcType=VARCHAR},
            </if>
            <if test="fundApiData != null">
                #{fundApiData,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.yilucaifu.domain.UserInfoExample" resultType="java.lang.Long">
        select count(*) from user_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user_info
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.businessLicenseFront != null">
                business_license_front = #{record.businessLicenseFront,jdbcType=VARCHAR},
            </if>
            <if test="record.businessLicenseVerso != null">
                business_license_verso = #{record.businessLicenseVerso,jdbcType=VARCHAR},
            </if>
            <if test="record.companyAccountCard != null">
                company_account_card = #{record.companyAccountCard,jdbcType=VARCHAR},
            </if>
            <if test="record.identityCard != null">
                identity_card = #{record.identityCard,jdbcType=VARCHAR},
            </if>
            <if test="record.companyEntrustBook != null">
                company_entrust_book = #{record.companyEntrustBook,jdbcType=VARCHAR},
            </if>
            <if test="record.manIdentity != null">
                man_identity = #{record.manIdentity,jdbcType=VARCHAR},
            </if>
            <if test="record.elseAccountCard != null">
                else_account_card = #{record.elseAccountCard,jdbcType=VARCHAR},
            </if>
            <if test="record.qfiiCard != null">
                qfii_card = #{record.qfiiCard,jdbcType=VARCHAR},
            </if>
            <if test="record.egalperson != null">
                egalPerson = #{record.egalperson,jdbcType=VARCHAR},
            </if>
            <if test="record.egalpersoncertno != null">
                egalPersonCertNo = #{record.egalpersoncertno,jdbcType=VARCHAR},
            </if>
            <if test="record.socialcreditcode != null">
                socialCreditCode = #{record.socialcreditcode,jdbcType=VARCHAR},
            </if>
            <if test="record.expiresend != null">
                expiresEnd = #{record.expiresend,jdbcType=VARCHAR},
            </if>
            <if test="record.certorganization != null">
                certOrganization = #{record.certorganization,jdbcType=VARCHAR},
            </if>
            <if test="record.contactoraddress != null">
                contactorAddress = #{record.contactoraddress,jdbcType=VARCHAR},
            </if>
            <if test="record.taxregisterno != null">
                taxRegisterNo = #{record.taxregisterno,jdbcType=VARCHAR},
            </if>
            <if test="record.businesslicenseno != null">
                businessLicenseNo = #{record.businesslicenseno,jdbcType=VARCHAR},
            </if>
            <if test="record.auditstatus != null">
                auditStatus = #{record.auditstatus,jdbcType=INTEGER},
            </if>
            <if test="record.auditqfii != null">
                auditQfii = #{record.auditqfii,jdbcType=INTEGER},
            </if>
            <if test="record.audittime != null">
                audittime = #{record.audittime,jdbcType=VARCHAR},
            </if>
            <if test="record.auditqfiitime != null">
                auditqfiitime = #{record.auditqfiitime,jdbcType=VARCHAR},
            </if>
            <if test="record.auditstatusfailreason != null">
                auditStatusFailReason = #{record.auditstatusfailreason,jdbcType=VARCHAR},
            </if>
            <if test="record.auditqfiifailreason != null">
                auditQfiiFailReason = #{record.auditqfiifailreason,jdbcType=VARCHAR},
            </if>
            <if test="record.merchantRegister != null">
                merchant_register = #{record.merchantRegister,jdbcType=TINYINT},
            </if>
            <if test="record.merchantRegisterTime != null">
                merchant_register_time = #{record.merchantRegisterTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.merchantAuth != null">
                merchant_auth = #{record.merchantAuth,jdbcType=TINYINT},
            </if>
            <if test="record.merchantAuthTime != null">
                merchant_auth_time = #{record.merchantAuthTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.merchantOpening != null">
                merchant_opening = #{record.merchantOpening,jdbcType=TINYINT},
            </if>
            <if test="record.merchantOpeningTime != null">
                merchant_opening_time = #{record.merchantOpeningTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.fundOpening != null">
                fund_opening = #{record.fundOpening,jdbcType=TINYINT},
            </if>
            <if test="record.fundOpeningTime != null">
                fund_opening_time = #{record.fundOpeningTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.merchantFailReason != null">
                merchant_fail_reason = #{record.merchantFailReason,jdbcType=VARCHAR},
            </if>
            <if test="record.createtime != null">
                createtime = #{record.createtime,jdbcType=VARCHAR},
            </if>
            <if test="record.hsApiData != null">
                hs_api_data = #{record.hsApiData,jdbcType=VARCHAR},
            </if>
            <if test="record.fundApiData != null">
                fund_api_data = #{record.fundApiData,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user_info
        set id = #{record.id,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=INTEGER},
        business_license_front = #{record.businessLicenseFront,jdbcType=VARCHAR},
        business_license_verso = #{record.businessLicenseVerso,jdbcType=VARCHAR},
        company_account_card = #{record.companyAccountCard,jdbcType=VARCHAR},
        identity_card = #{record.identityCard,jdbcType=VARCHAR},
        company_entrust_book = #{record.companyEntrustBook,jdbcType=VARCHAR},
        man_identity = #{record.manIdentity,jdbcType=VARCHAR},
        else_account_card = #{record.elseAccountCard,jdbcType=VARCHAR},
        qfii_card = #{record.qfiiCard,jdbcType=VARCHAR},
        egalPerson = #{record.egalperson,jdbcType=VARCHAR},
        egalPersonCertNo = #{record.egalpersoncertno,jdbcType=VARCHAR},
        socialCreditCode = #{record.socialcreditcode,jdbcType=VARCHAR},
        expiresEnd = #{record.expiresend,jdbcType=VARCHAR},
        certOrganization = #{record.certorganization,jdbcType=VARCHAR},
        contactorAddress = #{record.contactoraddress,jdbcType=VARCHAR},
        taxRegisterNo = #{record.taxregisterno,jdbcType=VARCHAR},
        businessLicenseNo = #{record.businesslicenseno,jdbcType=VARCHAR},
        auditStatus = #{record.auditstatus,jdbcType=INTEGER},
        auditQfii = #{record.auditqfii,jdbcType=INTEGER},
        audittime = #{record.audittime,jdbcType=VARCHAR},
        auditqfiitime = #{record.auditqfiitime,jdbcType=VARCHAR},
        auditStatusFailReason = #{record.auditstatusfailreason,jdbcType=VARCHAR},
        auditQfiiFailReason = #{record.auditqfiifailreason,jdbcType=VARCHAR},
        merchant_register = #{record.merchantRegister,jdbcType=TINYINT},
        merchant_register_time = #{record.merchantRegisterTime,jdbcType=TIMESTAMP},
        merchant_auth = #{record.merchantAuth,jdbcType=TINYINT},
        merchant_auth_time = #{record.merchantAuthTime,jdbcType=TIMESTAMP},
        merchant_opening = #{record.merchantOpening,jdbcType=TINYINT},
        merchant_opening_time = #{record.merchantOpeningTime,jdbcType=TIMESTAMP},
        fund_opening = #{record.fundOpening,jdbcType=TINYINT},
        fund_opening_time = #{record.fundOpeningTime,jdbcType=TIMESTAMP},
        merchant_fail_reason = #{record.merchantFailReason,jdbcType=VARCHAR},
        createtime = #{record.createtime,jdbcType=VARCHAR},
        hs_api_data = #{record.hsApiData,jdbcType=VARCHAR},
        fund_api_data = #{record.fundApiData,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.yilucaifu.domain.UserInfo">
        update user_info
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="businessLicenseFront != null">
                business_license_front = #{businessLicenseFront,jdbcType=VARCHAR},
            </if>
            <if test="businessLicenseVerso != null">
                business_license_verso = #{businessLicenseVerso,jdbcType=VARCHAR},
            </if>
            <if test="companyAccountCard != null">
                company_account_card = #{companyAccountCard,jdbcType=VARCHAR},
            </if>
            <if test="identityCard != null">
                identity_card = #{identityCard,jdbcType=VARCHAR},
            </if>
            <if test="companyEntrustBook != null">
                company_entrust_book = #{companyEntrustBook,jdbcType=VARCHAR},
            </if>
            <if test="manIdentity != null">
                man_identity = #{manIdentity,jdbcType=VARCHAR},
            </if>
            <if test="elseAccountCard != null">
                else_account_card = #{elseAccountCard,jdbcType=VARCHAR},
            </if>
            <if test="qfiiCard != null">
                qfii_card = #{qfiiCard,jdbcType=VARCHAR},
            </if>
            <if test="egalperson != null">
                egalPerson = #{egalperson,jdbcType=VARCHAR},
            </if>
            <if test="egalpersoncertno != null">
                egalPersonCertNo = #{egalpersoncertno,jdbcType=VARCHAR},
            </if>
            <if test="socialcreditcode != null">
                socialCreditCode = #{socialcreditcode,jdbcType=VARCHAR},
            </if>
            <if test="expiresend != null">
                expiresEnd = #{expiresend,jdbcType=VARCHAR},
            </if>
            <if test="certorganization != null">
                certOrganization = #{certorganization,jdbcType=VARCHAR},
            </if>
            <if test="contactoraddress != null">
                contactorAddress = #{contactoraddress,jdbcType=VARCHAR},
            </if>
            <if test="taxregisterno != null">
                taxRegisterNo = #{taxregisterno,jdbcType=VARCHAR},
            </if>
            <if test="businesslicenseno != null">
                businessLicenseNo = #{businesslicenseno,jdbcType=VARCHAR},
            </if>
            <if test="auditstatus != null">
                auditStatus = #{auditstatus,jdbcType=INTEGER},
            </if>
            <if test="auditqfii != null">
                auditQfii = #{auditqfii,jdbcType=INTEGER},
            </if>
            <if test="audittime != null">
                audittime = #{audittime,jdbcType=VARCHAR},
            </if>
            <if test="auditqfiitime != null">
                auditqfiitime = #{auditqfiitime,jdbcType=VARCHAR},
            </if>
            <if test="auditstatusfailreason != null">
                auditStatusFailReason = #{auditstatusfailreason,jdbcType=VARCHAR},
            </if>
            <if test="auditqfiifailreason != null">
                auditQfiiFailReason = #{auditqfiifailreason,jdbcType=VARCHAR},
            </if>
            <if test="merchantRegister != null">
                merchant_register = #{merchantRegister,jdbcType=TINYINT},
            </if>
            <if test="merchantRegisterTime != null">
                merchant_register_time = #{merchantRegisterTime,jdbcType=TIMESTAMP},
            </if>
            <if test="merchantAuth != null">
                merchant_auth = #{merchantAuth,jdbcType=TINYINT},
            </if>
            <if test="merchantAuthTime != null">
                merchant_auth_time = #{merchantAuthTime,jdbcType=TIMESTAMP},
            </if>
            <if test="merchantOpening != null">
                merchant_opening = #{merchantOpening,jdbcType=TINYINT},
            </if>
            <if test="merchantOpeningTime != null">
                merchant_opening_time = #{merchantOpeningTime,jdbcType=TIMESTAMP},
            </if>
            <if test="fundOpening != null">
                fund_opening = #{fundOpening,jdbcType=TINYINT},
            </if>
            <if test="fundOpeningTime != null">
                fund_opening_time = #{fundOpeningTime,jdbcType=TIMESTAMP},
            </if>
            <if test="merchantFailReason != null">
                merchant_fail_reason = #{merchantFailReason,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null">
                createtime = #{createtime,jdbcType=VARCHAR},
            </if>
            <if test="hsApiData != null">
                hs_api_data = #{hsApiData,jdbcType=VARCHAR},
            </if>
            <if test="fundApiData != null">
                fund_api_data = #{fundApiData,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.yilucaifu.domain.UserInfo">
    update user_info
    set user_id = #{userId,jdbcType=INTEGER},
      business_license_front = #{businessLicenseFront,jdbcType=VARCHAR},
      business_license_verso = #{businessLicenseVerso,jdbcType=VARCHAR},
      company_account_card = #{companyAccountCard,jdbcType=VARCHAR},
      identity_card = #{identityCard,jdbcType=VARCHAR},
      company_entrust_book = #{companyEntrustBook,jdbcType=VARCHAR},
      man_identity = #{manIdentity,jdbcType=VARCHAR},
      else_account_card = #{elseAccountCard,jdbcType=VARCHAR},
      qfii_card = #{qfiiCard,jdbcType=VARCHAR},
      egalPerson = #{egalperson,jdbcType=VARCHAR},
      egalPersonCertNo = #{egalpersoncertno,jdbcType=VARCHAR},
      socialCreditCode = #{socialcreditcode,jdbcType=VARCHAR},
      expiresEnd = #{expiresend,jdbcType=VARCHAR},
      certOrganization = #{certorganization,jdbcType=VARCHAR},
      contactorAddress = #{contactoraddress,jdbcType=VARCHAR},
      taxRegisterNo = #{taxregisterno,jdbcType=VARCHAR},
      businessLicenseNo = #{businesslicenseno,jdbcType=VARCHAR},
      auditStatus = #{auditstatus,jdbcType=INTEGER},
      auditQfii = #{auditqfii,jdbcType=INTEGER},
      audittime = #{audittime,jdbcType=VARCHAR},
      auditqfiitime = #{auditqfiitime,jdbcType=VARCHAR},
      auditStatusFailReason = #{auditstatusfailreason,jdbcType=VARCHAR},
      auditQfiiFailReason = #{auditqfiifailreason,jdbcType=VARCHAR},
      merchant_register = #{merchantRegister,jdbcType=TINYINT},
      merchant_register_time = #{merchantRegisterTime,jdbcType=TIMESTAMP},
      merchant_auth = #{merchantAuth,jdbcType=TINYINT},
      merchant_auth_time = #{merchantAuthTime,jdbcType=TIMESTAMP},
      merchant_opening = #{merchantOpening,jdbcType=TINYINT},
      merchant_opening_time = #{merchantOpeningTime,jdbcType=TIMESTAMP},
      fund_opening = #{fundOpening,jdbcType=TINYINT},
      fund_opening_time = #{fundOpeningTime,jdbcType=TIMESTAMP},
      merchant_fail_reason = #{merchantFailReason,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=VARCHAR},
      hs_api_data = #{hsApiData,jdbcType=VARCHAR},
      fund_api_data = #{fundApiData,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <!--myMapper-->

    <select id="getUserInfoByAll" resultType="cn.yilucaifu.domain.UserInfo">
    select * from UserInfo;
  </select>

    <insert id="createUserInfo" parameterType="cn.yilucaifu.domain.UserInfo" keyProperty="id"
            useGeneratedKeys="true">
        insert into user_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="businessLicenseFront != null">
                business_license_front,
            </if>
            <if test="businessLicenseVerso != null">
                business_license_verso,
            </if>
            <if test="companyAccountCard != null">
                company_account_card,
            </if>
            <if test="identityCard != null">
                identity_card,
            </if>
            <if test="companyEntrustBook != null">
                company_entrust_book,
            </if>
            <if test="manIdentity != null">
                man_identity,
            </if>
            <if test="elseAccountCard != null">
                else_account_card,
            </if>
            <if test="qfiiCard != null">
                qfii_card,
            </if>
            <if test="egalperson != null">
                egalPerson,
            </if>
            <if test="egalpersoncertno != null">
                egalPersonCertNo,
            </if>
            <if test="socialcreditcode != null">
                socialCreditCode,
            </if>
            <if test="expiresend != null">
                expiresEnd,
            </if>
            <if test="certorganization != null">
                certOrganization,
            </if>
            <if test="contactoraddress != null">
                contactorAddress,
            </if>
            <if test="taxregisterno != null">
                taxRegisterNo,
            </if>
            <if test="businesslicenseno != null">
                businessLicenseNo,
            </if>
            <if test="auditstatus != null">
                auditStatus,
            </if>
            <if test="auditqfii != null">
                auditQfii,
            </if>
            <if test="audittime != null">
                audittime,
            </if>
            <if test="auditqfiitime != null">
                auditqfiitime,
            </if>
            <if test="auditstatusfailreason != null">
                auditStatusFailReason,
            </if>
            <if test="auditqfiifailreason != null">
                auditQfiiFailReason,
            </if>
            <if test="merchantRegister != null">
                merchant_register,
            </if>
            <if test="merchantRegisterTime != null">
                merchant_register_time,
            </if>
            <if test="merchantAuth != null">
                merchant_auth,
            </if>
            <if test="merchantAuthTime != null">
                merchant_auth_time,
            </if>
            <if test="merchantOpening != null">
                merchant_opening,
            </if>
            <if test="merchantOpeningTime != null">
                merchant_opening_time,
            </if>
            <if test="fundOpening != null">
                fund_opening,
            </if>
            <if test="fundOpeningTime != null">
                fund_opening_time,
            </if>
            <if test="merchantFailReason != null">
                merchant_fail_reason,
            </if>
            <if test="createtime != null">
                createtime,
            </if>
            <if test="hsApiData != null">
                hs_api_data,
            </if>
            <if test="fundApiData != null">
                fund_api_data,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="businessLicenseFront != null">
                #{businessLicenseFront,jdbcType=VARCHAR},
            </if>
            <if test="businessLicenseVerso != null">
                #{businessLicenseVerso,jdbcType=VARCHAR},
            </if>
            <if test="companyAccountCard != null">
                #{companyAccountCard,jdbcType=VARCHAR},
            </if>
            <if test="identityCard != null">
                #{identityCard,jdbcType=VARCHAR},
            </if>
            <if test="companyEntrustBook != null">
                #{companyEntrustBook,jdbcType=VARCHAR},
            </if>
            <if test="manIdentity != null">
                #{manIdentity,jdbcType=VARCHAR},
            </if>
            <if test="elseAccountCard != null">
                #{elseAccountCard,jdbcType=VARCHAR},
            </if>
            <if test="qfiiCard != null">
                #{qfiiCard,jdbcType=VARCHAR},
            </if>
            <if test="egalperson != null">
                #{egalperson,jdbcType=VARCHAR},
            </if>
            <if test="egalpersoncertno != null">
                #{egalpersoncertno,jdbcType=VARCHAR},
            </if>
            <if test="socialcreditcode != null">
                #{socialcreditcode,jdbcType=VARCHAR},
            </if>
            <if test="expiresend != null">
                #{expiresend,jdbcType=VARCHAR},
            </if>
            <if test="certorganization != null">
                #{certorganization,jdbcType=VARCHAR},
            </if>
            <if test="contactoraddress != null">
                #{contactoraddress,jdbcType=VARCHAR},
            </if>
            <if test="taxregisterno != null">
                #{taxregisterno,jdbcType=VARCHAR},
            </if>
            <if test="businesslicenseno != null">
                #{businesslicenseno,jdbcType=VARCHAR},
            </if>
            <if test="auditstatus != null">
                #{auditstatus,jdbcType=INTEGER},
            </if>
            <if test="auditqfii != null">
                #{auditqfii,jdbcType=INTEGER},
            </if>
            <if test="audittime != null">
                #{audittime,jdbcType=VARCHAR},
            </if>
            <if test="auditqfiitime != null">
                #{auditqfiitime,jdbcType=VARCHAR},
            </if>
            <if test="auditstatusfailreason != null">
                #{auditstatusfailreason,jdbcType=VARCHAR},
            </if>
            <if test="auditqfiifailreason != null">
                #{auditqfiifailreason,jdbcType=VARCHAR},
            </if>
            <if test="merchantRegister != null">
                #{merchantRegister,jdbcType=TINYINT},
            </if>
            <if test="merchantRegisterTime != null">
                #{merchantRegisterTime,jdbcType=TIMESTAMP},
            </if>
            <if test="merchantAuth != null">
                #{merchantAuth,jdbcType=TINYINT},
            </if>
            <if test="merchantAuthTime != null">
                #{merchantAuthTime,jdbcType=TIMESTAMP},
            </if>
            <if test="merchantOpening != null">
                #{merchantOpening,jdbcType=TINYINT},
            </if>
            <if test="merchantOpeningTime != null">
                #{merchantOpeningTime,jdbcType=TIMESTAMP},
            </if>
            <if test="fundOpening != null">
                #{fundOpening,jdbcType=TINYINT},
            </if>
            <if test="fundOpeningTime != null">
                #{fundOpeningTime,jdbcType=TIMESTAMP},
            </if>
            <if test="merchantFailReason != null">
                #{merchantFailReason,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null">
                #{createtime,jdbcType=VARCHAR},
            </if>
            <if test="hsApiData != null">
                #{hsApiData,jdbcType=VARCHAR},
            </if>
            <if test="fundApiData != null">
                #{fundApiData,jdbcType=VARCHAR},
            </if>
        </trim>
  </insert>

    <update id="createUserQfii">
    update user_info set
    qfii_card = #{qfiiCard},audittime=NOW() where user_id = #{userId}
  </update>

    <select id="getStatusAndTimeList" resultMap="BaseResultMap">
    SELECT user_id, auditStatus, auditQfii, audittime, auditqfiitime, createtime
    FROM user_info
    WHERE user_id IN (#{userIds})
  </select>

    <select id="getUserAuditList" resultType="java.util.Map" parameterType="java.util.Map">
    SELECT a.id, a.user_id, a.auditStatus, a.auditQfii, a.audittime, a.auditqfiitime, a.createtime,
    a.qfii_card, b.company_name, b.company_prov, b.company_city, b.company_area, b.username, b.mobiletelno
    FROM user_info a
    LEFT JOIN users b
    ON a.user_id = b.user_id
    ORDER BY createtime DESC
  </select>

</mapper>