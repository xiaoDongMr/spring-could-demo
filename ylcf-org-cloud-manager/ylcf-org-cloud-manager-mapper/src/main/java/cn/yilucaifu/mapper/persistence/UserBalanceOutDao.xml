<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.yilucaifu.mapper.persistence.UserBalanceOutDao">
  <resultMap id="BaseResultMap" type="cn.yilucaifu.domain.UserBalanceOut">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="e_account" jdbcType="VARCHAR" property="eAccount" />
    <result column="card_id" jdbcType="VARCHAR" property="cardId" />
    <result column="card_holder" jdbcType="VARCHAR" property="cardHolder" />
    <result column="bankName" jdbcType="VARCHAR" property="bankname" />
    <result column="netlineno" jdbcType="VARCHAR" property="netlineno" />
    <result column="bankno" jdbcType="VARCHAR" property="bankno" />
    <result column="businessType" jdbcType="VARCHAR" property="businesstype" />
    <result column="profits_type" jdbcType="VARCHAR" property="profitsType" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="payStatus" jdbcType="SMALLINT" property="paystatus" />
    <result column="orderTime" jdbcType="VARCHAR" property="ordertime" />
    <result column="payTime" jdbcType="VARCHAR" property="paytime" />
    <result column="pay_ment" jdbcType="INTEGER" property="payMent" />
    <result column="retcode" jdbcType="VARCHAR" property="retcode" />
    <result column="retmsg" jdbcType="VARCHAR" property="retmsg" />
    <result column="createtime" jdbcType="VARCHAR" property="createtime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, e_account, card_id, card_holder, bankName, netlineno, bankno, businessType, 
    profits_type, order_id, amount, payStatus, orderTime, payTime, pay_ment, retcode, 
    retmsg, createtime
  </sql>
  <select id="selectByExample" parameterType="cn.yilucaifu.domain.UserBalanceOutExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_balance_out
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_balance_out
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_balance_out
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.yilucaifu.domain.UserBalanceOutExample">
    delete from user_balance_out
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.yilucaifu.domain.UserBalanceOut">
    insert into user_balance_out (id, user_id, e_account, 
      card_id, card_holder, bankName, 
      netlineno, bankno, businessType, 
      profits_type, order_id, amount, 
      payStatus, orderTime, payTime, 
      pay_ment, retcode, retmsg, 
      createtime)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{eAccount,jdbcType=VARCHAR}, 
      #{cardId,jdbcType=VARCHAR}, #{cardHolder,jdbcType=VARCHAR}, #{bankname,jdbcType=VARCHAR}, 
      #{netlineno,jdbcType=VARCHAR}, #{bankno,jdbcType=VARCHAR}, #{businesstype,jdbcType=VARCHAR}, 
      #{profitsType,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, 
      #{paystatus,jdbcType=SMALLINT}, #{ordertime,jdbcType=VARCHAR}, #{paytime,jdbcType=VARCHAR}, 
      #{payMent,jdbcType=INTEGER}, #{retcode,jdbcType=VARCHAR}, #{retmsg,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.yilucaifu.domain.UserBalanceOut">
    insert into user_balance_out
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="eAccount != null">
        e_account,
      </if>
      <if test="cardId != null">
        card_id,
      </if>
      <if test="cardHolder != null">
        card_holder,
      </if>
      <if test="bankname != null">
        bankName,
      </if>
      <if test="netlineno != null">
        netlineno,
      </if>
      <if test="bankno != null">
        bankno,
      </if>
      <if test="businesstype != null">
        businessType,
      </if>
      <if test="profitsType != null">
        profits_type,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="paystatus != null">
        payStatus,
      </if>
      <if test="ordertime != null">
        orderTime,
      </if>
      <if test="paytime != null">
        payTime,
      </if>
      <if test="payMent != null">
        pay_ment,
      </if>
      <if test="retcode != null">
        retcode,
      </if>
      <if test="retmsg != null">
        retmsg,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="eAccount != null">
        #{eAccount,jdbcType=VARCHAR},
      </if>
      <if test="cardId != null">
        #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="cardHolder != null">
        #{cardHolder,jdbcType=VARCHAR},
      </if>
      <if test="bankname != null">
        #{bankname,jdbcType=VARCHAR},
      </if>
      <if test="netlineno != null">
        #{netlineno,jdbcType=VARCHAR},
      </if>
      <if test="bankno != null">
        #{bankno,jdbcType=VARCHAR},
      </if>
      <if test="businesstype != null">
        #{businesstype,jdbcType=VARCHAR},
      </if>
      <if test="profitsType != null">
        #{profitsType,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="paystatus != null">
        #{paystatus,jdbcType=SMALLINT},
      </if>
      <if test="ordertime != null">
        #{ordertime,jdbcType=VARCHAR},
      </if>
      <if test="paytime != null">
        #{paytime,jdbcType=VARCHAR},
      </if>
      <if test="payMent != null">
        #{payMent,jdbcType=INTEGER},
      </if>
      <if test="retcode != null">
        #{retcode,jdbcType=VARCHAR},
      </if>
      <if test="retmsg != null">
        #{retmsg,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.yilucaifu.domain.UserBalanceOutExample" resultType="java.lang.Long">
    select count(*) from user_balance_out
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_balance_out
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.eAccount != null">
        e_account = #{record.eAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.cardId != null">
        card_id = #{record.cardId,jdbcType=VARCHAR},
      </if>
      <if test="record.cardHolder != null">
        card_holder = #{record.cardHolder,jdbcType=VARCHAR},
      </if>
      <if test="record.bankname != null">
        bankName = #{record.bankname,jdbcType=VARCHAR},
      </if>
      <if test="record.netlineno != null">
        netlineno = #{record.netlineno,jdbcType=VARCHAR},
      </if>
      <if test="record.bankno != null">
        bankno = #{record.bankno,jdbcType=VARCHAR},
      </if>
      <if test="record.businesstype != null">
        businessType = #{record.businesstype,jdbcType=VARCHAR},
      </if>
      <if test="record.profitsType != null">
        profits_type = #{record.profitsType,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.paystatus != null">
        payStatus = #{record.paystatus,jdbcType=SMALLINT},
      </if>
      <if test="record.ordertime != null">
        orderTime = #{record.ordertime,jdbcType=VARCHAR},
      </if>
      <if test="record.paytime != null">
        payTime = #{record.paytime,jdbcType=VARCHAR},
      </if>
      <if test="record.payMent != null">
        pay_ment = #{record.payMent,jdbcType=INTEGER},
      </if>
      <if test="record.retcode != null">
        retcode = #{record.retcode,jdbcType=VARCHAR},
      </if>
      <if test="record.retmsg != null">
        retmsg = #{record.retmsg,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_balance_out
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      e_account = #{record.eAccount,jdbcType=VARCHAR},
      card_id = #{record.cardId,jdbcType=VARCHAR},
      card_holder = #{record.cardHolder,jdbcType=VARCHAR},
      bankName = #{record.bankname,jdbcType=VARCHAR},
      netlineno = #{record.netlineno,jdbcType=VARCHAR},
      bankno = #{record.bankno,jdbcType=VARCHAR},
      businessType = #{record.businesstype,jdbcType=VARCHAR},
      profits_type = #{record.profitsType,jdbcType=VARCHAR},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DECIMAL},
      payStatus = #{record.paystatus,jdbcType=SMALLINT},
      orderTime = #{record.ordertime,jdbcType=VARCHAR},
      payTime = #{record.paytime,jdbcType=VARCHAR},
      pay_ment = #{record.payMent,jdbcType=INTEGER},
      retcode = #{record.retcode,jdbcType=VARCHAR},
      retmsg = #{record.retmsg,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.yilucaifu.domain.UserBalanceOut">
    update user_balance_out
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="eAccount != null">
        e_account = #{eAccount,jdbcType=VARCHAR},
      </if>
      <if test="cardId != null">
        card_id = #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="cardHolder != null">
        card_holder = #{cardHolder,jdbcType=VARCHAR},
      </if>
      <if test="bankname != null">
        bankName = #{bankname,jdbcType=VARCHAR},
      </if>
      <if test="netlineno != null">
        netlineno = #{netlineno,jdbcType=VARCHAR},
      </if>
      <if test="bankno != null">
        bankno = #{bankno,jdbcType=VARCHAR},
      </if>
      <if test="businesstype != null">
        businessType = #{businesstype,jdbcType=VARCHAR},
      </if>
      <if test="profitsType != null">
        profits_type = #{profitsType,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="paystatus != null">
        payStatus = #{paystatus,jdbcType=SMALLINT},
      </if>
      <if test="ordertime != null">
        orderTime = #{ordertime,jdbcType=VARCHAR},
      </if>
      <if test="paytime != null">
        payTime = #{paytime,jdbcType=VARCHAR},
      </if>
      <if test="payMent != null">
        pay_ment = #{payMent,jdbcType=INTEGER},
      </if>
      <if test="retcode != null">
        retcode = #{retcode,jdbcType=VARCHAR},
      </if>
      <if test="retmsg != null">
        retmsg = #{retmsg,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.yilucaifu.domain.UserBalanceOut">
    update user_balance_out
    set user_id = #{userId,jdbcType=INTEGER},
      e_account = #{eAccount,jdbcType=VARCHAR},
      card_id = #{cardId,jdbcType=VARCHAR},
      card_holder = #{cardHolder,jdbcType=VARCHAR},
      bankName = #{bankname,jdbcType=VARCHAR},
      netlineno = #{netlineno,jdbcType=VARCHAR},
      bankno = #{bankno,jdbcType=VARCHAR},
      businessType = #{businesstype,jdbcType=VARCHAR},
      profits_type = #{profitsType,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      payStatus = #{paystatus,jdbcType=SMALLINT},
      orderTime = #{ordertime,jdbcType=VARCHAR},
      payTime = #{paytime,jdbcType=VARCHAR},
      pay_ment = #{payMent,jdbcType=INTEGER},
      retcode = #{retcode,jdbcType=VARCHAR},
      retmsg = #{retmsg,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--custom-->
  <select id="getUserBalance" resultType="cn.yilucaifu.domain.UserBalanceOut">
    SELECT
    payStatus,
    retcode,
    retmsg
    FROM
    user_balance_out o
    WHERE
    o.`order_id` = #{order_id}
    LIMIT 1;
  </select>

    <!--余额明细-->
  <select id="getUserBalanceByDetail" resultType="java.util.Map">
    SELECT * from (
      select orderTime,CASE businessType WHEN '1' THEN '充值' ELSE '回款'  END businessType,card_id,bankName,amount,profits_type from user_balance_in
      WHERE user_id = #{user_id} AND payStatus = #{payStatus}
      UNION all
      SELECT orderTime,CASE businessType WHEN 'Y' THEN '提现' ELSE '购买' END businessType,card_id,bankName,amount,profits_type from user_balance_out
      WHERE user_id = #{user_id} AND payStatus = #{payStatus} AND businessType = 'Y'
      UNION all
      SELECT orderTime,'购买' businessType, bankbook card_id,p2pName bankName,amount,'0' profits_type FROM p2p_userBuy
      WHERE user_id = #{user_id} and payStatus = #{payStatus}
      UNION all
      SELECT orderTime,'购买' businessType, bankbook card_id,p2pnavName bankName,amount,'1' profits_type FROM p2pnav_userBuy
      WHERE user_id = #{user_id} and payStatus = #{payStatus}
      UNION all
      SELECT createtime orderTime, '回款' businessType,bankCardNo card_id,'' bankName,amount,'' profits_type  FROM p2p_return_fv
      WHERE user_id = #{user_id} AND retcode = '0000'
      UNION ALL
      SELECT
      h.createtime orderTime,'购买' businessType,h.depositacct card_id,h.fundname,h.confirmedamount amount,'2' profits_type
      FROM yilucaifu_org.`pingan_account_funds_history` h
      LEFT JOIN
      yilucaifu_org.p2p_account p
      ON h.userid = p.user_id
      WHERE
      h.userid = #{user_id}
      AND
      p.invest_type = 1
      AND
      h.businessname = '申购确认'
      AND
      h.applystname = '确认成功'
      UNION ALL
      SELECT
      h.createtime orderTime,'提现' businessType,h.depositacct card_id,h.fundname,h.confirmedamount amount,'2' profits_type
      FROM yilucaifu_org.`pingan_account_funds_history` h
      LEFT JOIN
      yilucaifu_org.p2p_account p
      ON h.userid = p.user_id
      WHERE
      h.userid = #{user_id}
      AND
      p.invest_type = 1
      AND
      h.businessname = '赎回确认'
      AND
      h.applystname = '确认成功'
    ) mr
    WHERE  1=1
    <if test="condition.beginOrderTime != null and condition.beginOrderTime != ''">
      and mr.orderTime &gt;= #{condition.beginOrderTime}
    </if>
    <if test="condition.endOrderTime != null and condition.endOrderTime != ''">
      and mr.orderTime &lt;= #{condition.endOrderTime}
    </if>
    <if test="condition.profitsType != null and condition.profitsType != ''">
      and mr.profits_type = #{condition.profitsType}
    </if>
    <if test="condition.businessType != null and condition.businessType != ''">
      AND businessType = #{condition.businessType}
    </if>
    ORDER BY mr.orderTime DESC
  </select>

  <select id="getFailUserBalanceOutList" resultType="cn.yilucaifu.domain.UserBalanceOut">
    SELECT * FROM `user_balance_out` b
    WHERE
    b.bankName = '一路财富（北京）信息科技有限公司基金销售归集总账户'
    AND
    b.payStatus != 0
    AND
    b.payStatus != 1
    <if test="start_time != null and start_time !='' ">
      and DATE(b.orderTime) &gt;= DATE(#{start_time})
    </if>
    <if test="end_time != null and end_time !='' ">
      and DATE(b.orderTime) &lt;= DATE(#{start_time})
    </if>
    ;
  </select>

</mapper>